import csv

class ColonyAnalyzer:

    ## no constructor necessary since the class creates its own data structures and writes them to a file
    colony_data_over_time = []

    def analyze_colony(self, colony, time):
        ## access instance data of colony objects and extract data
        ## data will probably be read in from arrays of cell objects generated by the colony class
        ## cell objects include boolean and float attributes that carry values such as presence of antibiotic resistance
        ## calculate statistics including ratio of resistant/nonresistant bacteria, mortality rate of bacteria?, etc.
        ## export/save data in readable format as .csv file
        num_cells = len(colony.cells) # <-- len() argument will be added after colony attributes have been determined
        ## add counters that track numbers of resistant/nonresistant cells, etc.
        num_resistant = 0
        num_nonresistant = 0
        for i in range(num_cells):
            if colony.cells[i].resistant:
                num_resistant+=1
            else:
                num_nonresistant+=1
        self.colony_data_over_time.append([time, num_resistant, num_nonresistant])
        
    ## data parameter type is TBD
    def write_to_csv(self, data):
        with open('colony_analysis.csv', mode = 'w') as colony_analysis:
            file_writer = csv.writer(colony_analysis, delimiter = ", ", quotechar = '"', quoting = csv.QUOTE_MINIMAL)
            ## loop command to write elements of array/list --> file_writer.writerow()

    def print_data(self):
        print("Time\t# Res.\t# Not Res.")
        for data in self.colony_data_over_time:
            print(str(data[0])+"\t"+str(data[1])+"\t"+str(data[2]))
